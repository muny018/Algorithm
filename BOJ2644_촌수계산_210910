//BOJ2644 촌수계산

//문제
//https://www.acmicpc.net/problem/2644

//해설
//

#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <queue>
using namespace std;
int N, m;
int nStart, nEnd;
int nMap[101][101] = { 0 };
int nAnswer = -1;

void BFS(int nStart, int input)
{
	bool bVisited[101] = { false };

	bVisited[nStart] = true;
	bVisited[input] = true;

	queue <int> Que;
	int nCount = 0;
	Que.push(input);
	int nNext = 0;
	int nQueSize;

	while (!Que.empty())
	{
		nQueSize = Que.size();

		nCount++;
	
		for (int nTime = 0; nTime < nQueSize; nTime++)
		{
			int nNow = Que.front();
			Que.pop();

			for (int i = 1; i <= N; i++)
			{
				if (nNow == i || bVisited[i] == true) continue;

				if (nMap[nNow][i] == 1)
				{
					bVisited[i] = true;
					if (i == nEnd)
					{
						nCount++;
						nAnswer = nCount;
						return;
					}
					else
					{
						Que.push(i);
					}
				}
			}
		}
	
	}
	
}

void Solve()
{
	for (int i = 1; i <= N; i++)
	{
		if (nStart == i) continue;

		if (nMap[nStart][i] == 1)
		{
			BFS(nStart, i);
		}
	}

}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
#endif

	cin >> N;
	cin >> nStart >> nEnd;
	cin >> m;

	int a, b;
	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;
		nMap[a][b] = 1;
		nMap[b][a] = 1;
	}


	Solve();

	cout << nAnswer << "\n";

	return 0;
}
