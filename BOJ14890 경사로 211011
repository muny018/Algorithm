//BOJ14890 경사로 211011

//문제
//https://www.acmicpc.net/problem/14890

//해설
//

#define _CRT_SECURE_NO_WARNINGS
#define MAX 102

#include <iostream>
using namespace std;

int nMap[MAX][MAX] = { 0 };
int nProc[MAX] = { 0 };
bool bVisited[MAX] = { false };
int N, L;
int nAnswer = 0;

void CheckRoad(int nIdx)
{
	if (nIdx >= N-1)
	{
		nAnswer++;
		return;
	}

	int nCurNum = nProc[nIdx];
	int nNextNum = nProc[nIdx+1];

	//내려가는 경우
	if (nCurNum - nNextNum == 1)
	{
		if (nIdx + L >= N) return;

		for (int i = nIdx + 1; i <= nIdx + L; i++)
		{
			if (nNextNum != nProc[i] || bVisited[i] ==true )
			{
				return;
			}
		}

		for (int i = nIdx + 1; i <= nIdx + L; i++)
		{
			bVisited[i] = true;
		}

		CheckRoad(nIdx + L);

	}
	else if (nCurNum - nNextNum == -1)//올라가는 경우
	{
		if (nIdx - L+1 < 0) return;

		for (int i = nIdx - L+1; i <= nIdx; i++)
		{
			if (nCurNum != nProc[i] || bVisited[i] == true)
			{
				return;
			}
		}

		for (int i = nIdx - L + 1; i <= nIdx; i++)
		{
			bVisited[i] = true;
		}

		CheckRoad(nIdx + 1);
	}
	else if (nCurNum == nNextNum)
	{
		CheckRoad(nIdx + 1);
	}

}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
#endif
	cin >> N >> L;

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			cin >> nMap[i][j];
		}
	}
	
	//행에 대해서 점검
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			nProc[j] = nMap[i][j];
			bVisited[j] = false;
		}

		CheckRoad(0);
	}

	//열에 대해서 점검
	for (int j = 0; j < N; j++)
	{
		for (int i = 0; i < N; i++)
		{
			nProc[i] = nMap[i][j];
			bVisited[i] = false;
		}

		CheckRoad(0);
	}

	cout << nAnswer << "\n";


	return 0;
}
